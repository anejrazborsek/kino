// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web.Data;

#nullable disable

namespace web.Migrations
{
    [DbContext(typeof(KinoContext))]
    [Migration("20211123173223_SedezDodan")]
    partial class SedezDodan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("web.Models.Dvorana", b =>
                {
                    b.Property<int>("DvoranaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DvoranaID"), 1L, 1);

                    b.Property<string>("Dvorana_tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DvoranaID");

                    b.ToTable("Dvorana", (string)null);
                });

            modelBuilder.Entity("web.Models.Film", b =>
                {
                    b.Property<int>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmID"), 1L, 1);

                    b.Property<string>("Film_ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Film_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Film_opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Film_reziser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Film_trajanje")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.ToTable("Film", (string)null);
                });

            modelBuilder.Entity("web.Models.Karta", b =>
                {
                    b.Property<int>("KartaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KartaID"), 1L, 1);

                    b.Property<double>("Karta_cena")
                        .HasColumnType("float");

                    b.Property<int>("PredstavaID")
                        .HasColumnType("int");

                    b.HasKey("KartaID");

                    b.HasIndex("PredstavaID");

                    b.ToTable("Karta", (string)null);
                });

            modelBuilder.Entity("web.Models.Predstava", b =>
                {
                    b.Property<int>("PredstavaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaID"), 1L, 1);

                    b.Property<int>("DvoranaID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<string>("Predstava_cas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PredstavaID");

                    b.HasIndex("DvoranaID");

                    b.HasIndex("FilmID");

                    b.ToTable("Predstava", (string)null);
                });

            modelBuilder.Entity("web.Models.Sedez", b =>
                {
                    b.Property<int>("SedezID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedezID"), 1L, 1);

                    b.Property<int>("DvoranaID")
                        .HasColumnType("int");

                    b.Property<string>("Sedez_tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SedezID");

                    b.HasIndex("DvoranaID");

                    b.ToTable("Sedež", (string)null);
                });

            modelBuilder.Entity("web.Models.Karta", b =>
                {
                    b.HasOne("web.Models.Predstava", "Predstava")
                        .WithMany()
                        .HasForeignKey("PredstavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("web.Models.Predstava", b =>
                {
                    b.HasOne("web.Models.Dvorana", "Dvorana")
                        .WithMany("Predstave")
                        .HasForeignKey("DvoranaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Film", "Film")
                        .WithMany("Predstave")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dvorana");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("web.Models.Sedez", b =>
                {
                    b.HasOne("web.Models.Dvorana", "Dvorana")
                        .WithMany("Sedezi")
                        .HasForeignKey("DvoranaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dvorana");
                });

            modelBuilder.Entity("web.Models.Dvorana", b =>
                {
                    b.Navigation("Predstave");

                    b.Navigation("Sedezi");
                });

            modelBuilder.Entity("web.Models.Film", b =>
                {
                    b.Navigation("Predstave");
                });
#pragma warning restore 612, 618
        }
    }
}
